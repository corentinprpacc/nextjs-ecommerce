generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  firstName     String?
  lastName      String?
  username      String    @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phone         String?
  password      String?
  role          String @default("customer")
  accounts       Account[]
  sessions       Session[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id            String @id @default(cuid())
  name          String
  image         String
  price         Float
  category      String
  price_id      String?
  orders        OrdersOnProducts[]
}

model Order {
  id            String @id @default(cuid())
  createdAt     DateTime @default(now())
  customer      User     @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId    String
  products      OrdersOnProducts[]
  
}

model OrdersOnProducts {
  product    Product @relation(fields: [productId], references: [id])
  productId  String // relation scalar field (used in the `@relation` attribute above)
  order   Order @relation(fields: [orderId], references: [id])
  orderId String // relation scalar field (used in the `@relation` attribute above)
  createdAt DateTime @default(now())

  @@id([productId, orderId])
}
